make package/network/services/zk-audit/{clean,compile} V=s

# 在openwrt环境下进行编译
make package/network/utils/nlbwmon/{clean,compile} V=s

#D:\GIT\2018_dev\zk_openwrt\openwrt\package\network\utils\nlbwmon\src\utils.c

git for-each-ref --format='%(committerdate) %09 %(authorname) %09 %(refname)' | sort -k5n -k2M -k3n -k4n

git branch -d remotes/origin/2

cd openwrt/build_dir/

rm target-x86_64_uClibc-0.9.33.2/ -rf
rm toolchain-x86_64_gcc-4.8-linaro_uClibc-0.9.33.2/ -rf

cp include/ -rpf ~/zk_openwrt/openwrt/staging_dir/toolchain-mipsel_1004kc+dsp_gcc-4.8-linaro_uClibc-0.9.33.2/

cp package/kernel/appaudit/src/xt_appid/xt_appid.h  staging_dir/target-mipsel_24kc_musl/usr/include/


1.贴一个cjson的下载地址http://www.kyne.com.au/~mark/software/download/lua-cjson-2.1.0.tar.gz。
在linux当前目录下直接wget http://www.kyne.com.au/~mark/software/download/lua-cjson-2.1.0.tar.gz6
解压到当前目录tar zxvf lua-cjson-2.1.0.tar.gz
然后cd lua-cjson-2.1.0
直接make(如何make不过，确认是否安装了lua-devel，安装方法直接sudo yum install lua-devel)

https://github.com/openresty/lua-resty-mysql.git

zk_openwrt/openwrt/build_dir/target-mipsel_1004kc+dsp_uClibc-0.9.33.2$

~/codes/zk_openwrt/openwrt/build_dir/target-mipsel_1004kc+dsp_uClibc-0.9.33.2/nginx-all-module/ngi nx-1.15.8$ ./configure --help

安装好后LUAJIT_LIB和LUAJIT_INC的路径是：
库文件 LUAJIT_LIB=/usr/local/luajit/lib
头文件 LUAJIT_INC=/usr/local/luajit/include/luajit-2.1
这两个路径编译tengine时要用到。

2.2编译tengine：


git reset --hard FETCH_HEAD
git reset --hard HEAD@{2}
