user  root;

worker_processes  1;
events {
	worker_connections 1024;
}

pid /var/run/nginx.pid;

http {
	lua_package_path '/usr/lib/lua/ngxlua/?.lua;;';

	limit_conn_zone $server_name zone=perserver:10m;
	include		mime.types;
	default_type	application/octet-stream;
	access_log off;
        error_log /tmp/run/syslog.log;

	server {
		listen 8080;
		root /usr/lib/lua/nginx/html;
		location / {
			index  index.html index.htm;
		}

		location /demo {
			default_type text/html;
			content_by_lua '
				ngx.say("<p>hello, nginx</p>")
				';
		}

		location /http_get {
			default_type text/html;
			content_by_lua_file /usr/lib/lua/nginx/http_get.lua;
		}

		location /http_post {
			default_type text/html;
			content_by_lua_file /usr/lib/lua/nginx/http_post.lua;
		}

		location /http_header {
			default_type text/html;
			content_by_lua_file /usr/lib/lua/nginx/http_header.lua;
		}
		
		location /ping{
			default_type text/html;
			content_by_lua_file /usr/lib/lua/nginx/auth/ping.lua;
		}

		location /portal {
			default_type text/html;
			content_by_lua_file /usr/lib/lua/nginx/auth/portal.lua;
		}

		location /login {
			default_type text/html;
			content_by_lua_file /usr/lib/lua/nginx/auth/login.lua;
		}

		location /auth {
			default_type text/html;
			content_by_lua_file /usr/lib/lua/nginx/auth/auth.lua;
		}

		location /checknoneedauth.do {
			default_type text/html;
			content_by_lua_file /usr/lib/lua/nginx/auth/handler/checknoneedauth.lua;
		}

		location /getsmscode.do {
			default_type text/html;
			content_by_lua_file /usr/lib/lua/nginx/auth/handler/getsmscode.lua;
		}

		location /checksmscode.do {
			default_type text/html;
			content_by_lua_file /usr/lib/lua/nginx/auth/handler/checksmscode.lua;
		}

		location /checkaccount.do {
			default_type text/html;
			content_by_lua_file /usr/lib/lua/nginx/auth/handler/checkfromauth.lua;
		}

		location /getweixinconfig.do {
			default_type text/html;
			set $method "getweixinconfig";
			content_by_lua_file /usr/lib/lua/nginx/auth/handler/weixinauth.lua;
		}

		location /getweixinauthstatus.do {
			default_type text/html;
			set $method "getweixinauthstatus";
			content_by_lua_file /usr/lib/lua/nginx/auth/handler/weixinauth.lua;
		}

		location /checkweixinconfig.do {
			default_type text/html;
			set $method "checkweixinconfig";
			content_by_lua_file /usr/lib/lua/nginx/auth/handler/weixinauth.lua;
		}

		location /checkweixingzauth.do {
			default_type text/html;
			set $method "checkweixingzauth";
			content_by_lua_file /usr/lib/lua/nginx/auth/handler/weixinauth.lua;
		}

		location /checkweixinsmauth.do {
			default_type text/html;
			set $method "checkweixinsmauth";
			content_by_lua_file /usr/lib/lua/nginx/auth/handler/weixinauth.lua;
		} 
	}
		
	server {
		listen       8090;
		server_name  localhost;
		lua_code_cache on;
		limit_conn perserver 1;
		#charset koi8-r;

		#access_log  logs/host.access.log  main;

		location ~ \.ac$ {
			content_by_lua_file /usr/lib/lua/luci/service/ac/controller/ngxHttpProcess.lua;
		}
	}
	server {
	    listen       80;
	    listen       8888; # mark
	    server_name  localhost;
	    charset UTF-8;
	    # access_log  /tmp/access_80.log  main;
	    # error_log   /tmp/error_80.log debug;
	    client_max_body_size 30m;
	    autoindex on;
	    root   /www;
	    location ~* /cgi-bin/webconsole.* {
	        root /www;
	        fastcgi_pass  127.0.0.1:9000;
	        fastcgi_index /cgi-bin/webconsole;
	        
	        fastcgi_split_path_info  (/cgi-bin/webconsole)(.*)$;
	        fastcgi_param PATH_INFO $fastcgi_path_info;
	        fastcgi_param SCRIPT_FILENAME  $document_root$fastcgi_script_name;
	        include fastcgi_params;
	    }
	}
    include /etc/nginx/vhosts/*.conf;
}
